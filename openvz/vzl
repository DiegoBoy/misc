#!/bin/bash
# List OpenVZ containers nicely by extending vzlist.

# Format number with suffix (k/M/G) and minimum 2 significant digits.
# Usage: fmt <integer>
fmt() {
  local mult unit size digits float
  mult=1
  for unit in "" k M G T P E Z Y; do
    if [[ $1 -lt $[$mult * 1024] ]]; then
      break
    fi
    mult=$[$mult * 1024]
  done
  size=$[$1 / $mult]
  if [[ $size -lt 10 ]]; then
    digits=1
  else
    digits=0
  fi
  float=$[10 * $1 / $mult - 10 * $size]
  if [[ $digits -eq 0 ]] || [[ $float -eq 0 ]]; then
    printf "%i%s" $size $unit
  else
    printf "%i.%0i%s" $size $float $unit
  fi
}

ve_ips() {
  local prefix file ips f1 f2 f3
  prefix=
  if [[ $1 -ne 0 ]]; then
    prefix="/var/lib/vz/private/$1"
  fi
  file="$prefix/etc/network/interfaces"
  if [[ ! -f "$file" ]]; then
    echo "-"
    return
  fi
  ips=""
  while read f1 f2 f3; do
    if [[ "$f1" != "address" ]] || \
       [[ "$f2" = "127.0.0.1" ]] || [[ "$f2" = "::1" ]]; then
      continue
    fi
    ips="$ips,$f2"
  done < "$file"
  echo "${ips:1}"
}

ve_gw() {
  local prefix file f1 f2 f3 f4 f5 f6 f7 f8
  prefix=
  if [[ $1 -ne 0 ]]; then
    prefix="/var/lib/vz/private/$1"
  fi
  file="$prefix/etc/network/interfaces"
  if [[ ! -f "$file" ]]; then
    echo "-"
    return
  fi
  while read f1 f2 f3 f4 f5 f6 f7 f8; do
    if [[ "$f2" = "venet0" ]]; then
      echo "(venet)"
      return
    fi
    if [[ "$f1" = "gateway" ]]; then
      echo "$f2"
      return
    fi
    if [[ "$f5" = "default" ]] && [[ "$f6" = "via" ]]; then
      echo "$f7"
      return
    fi
  done < "$file"
  echo "-"
}

ve_hostname() {
  local prefix file hostname
  prefix=
  if [[ $1 -ne 0 ]]; then
    prefix="/var/lib/vz/private/$1"
  fi
  file="$prefix/etc/hostname"
  if [[ ! -f "$file" ]]; then
    echo "-"
    return
  fi
  read hostname < "$file"
  echo "$hostname"
}

ve_list() {
  local total running list out veid status cpu name load procs \
    vm vmb vml vmp disk disks diskh diskp ips gw name cols line
  total=0
  running=0
  list=$(vzlist -aHo veid,status,cpuunits,hostname,laverage,numproc,\
physpages,physpages.l,swappages,swappages.l,diskspace,diskspace.s,diskspace.h)
  out="ID NAME STATUS LOAD_AVERAGE PROC UNITS RAM % SWAP % DISK % SL/HL"
  out="$out IP(s) GATEWAY"
  while read veid status cpu name load procs ram raml swap swapl disk disks \
    diskh; do
    if [[ -z "$veid" ]]; then
      out="$out^-"
      continue
    fi
    name=${name%%.*}
    if [[ "$name" == "-" ]]; then
      name=$(ve_hostname $veid)
    fi
    ramp="-"
    if [[ "$ram" != "-" ]]; then
      ramp=$(printf "%3i%%" $[100 * $ram / $raml])
      ram=$(fmt $[$ram * 4096])
    fi
    raml=$(fmt $[$raml * 4096])
    swapp="-"
    if [[ "$swap" != "-" ]]; then
      swapp=$(printf "%3i%%" $[100 * $swap / $swapl])
      swap=$(fmt $[$swap * 4096])
    fi
    swapl=$(fmt $[$swapl * 4096])
    diskp="-"
    if [[ "$disk" != "-" ]]; then
      diskp=$(printf "%3i%%" $[100 * $disk / $disks])
      disk=$(fmt $[$disk * 1024])
    fi
    disks=$(fmt $[$disks * 1024])
    diskh=$(fmt $[$diskh * 1024])
    ips=$(ve_ips $veid)
    gw=$(ve_gw $veid)
    out="$out^$veid $name $status $load $procs $cpu $ram/$raml $ramp"
    out="$out $swap/$swapl $swapp $disk $diskp $disks:$diskh $ips $gw"
    total=$[$total + 1]
    if [[ "$status" = "running" ]]; then
      running=$[$running + 1]
    fi
  done <<< "$list"
  cols=$(tput cols)
  while read line; do
    if [[ $cols -gt 0 ]]; then
      echo "${line:0:$cols}"
    else
      echo "$line"
    fi
  done < <(tr '^' '\n' <<< "$out" | column -t)
  printf "Total VE: %i running, %i not running, %i total.\n" $running \
    $[$total - $running] $total
}

hn_memory() {
  local ram_used ram_total swap_used swap_total
  free=$(free -b)
  ram_used=$(awk '$2=="buffers/cache:"{print $3}' <<< "$free")
  ram_total=$(awk '$1=="Mem:"{print $2}' <<< "$free")
  swap_used=$(awk '$1=="Swap:"{print $3}' <<< "$free")
  swap_total=$(awk '$1=="Swap:"{print $2}' <<< "$free")
  printf "Hardware Node RAM: %s/%s (%i%%) - Swap: %s/%s (%i%%)\n" \
    $(fmt $ram_used) $(fmt ram_total) $[100*$ram_used/$ram_total] \
    $(fmt $swap_used) $(fmt swap_total) $[100*$swap_used/$swap_total]
}

cpu_check() {
  local check util power
  check=$(vzcpucheck)
  util=$(awk 'NR==1{print $4}' <<< "$check")
  power=$(awk 'NR==2{print $5}' <<< "$check")
  printf "CPU units utilization: %i/%i (%i%%)\n" \
    $util $power $[100*$util/$power]
}

main() {
  if ! [[ -x "$(command -v vzlist)" ]]; then
    echo "Error: vzlist not available. Is vzctl installed?"
    exit 1
  fi
  ve_list
  hn_memory
  cpu_check
}

if [ "${BASH_SOURCE[0]}" = "$0" ]; then
  main "$@"
fi

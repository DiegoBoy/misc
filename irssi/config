settings = {
  core = {
    real_name = "Example";
    user_name = "example";
    nick = "Example";
    timestamp_format = "%H:%M:%S";
    log_timestamp = "%H:%M:%S";
    log_close_string = "--- Log closed %a %b %d %H:%M:%S %Y ";
    log_day_changed = "--- Day changed %a %b %d %Y ";
    awaylog_level = "NONE";
    awaylog_file = "~/.irssi/logs/away.log";
    log_create_mode = "600";
    log_open_string = "--- Log opened %a %b %d %H:%M:%S %Y ";
  };
  "fe-text" = {
    scrollback_time = "72h";
    actlist_sort = "refnum";
    scrollback_lines = "100000";
  };
  "fe-common/core" = {
    autolog = "no";
    AUTOLOG_PATH = "~/.irssi/logs/$tag/$0.log";
    autolog_colors = "no";
    autolog_level = "all -crap -clientcrap -ctcps ";
    awaylog_colors = "no";
    term_charset = "utf-8";
    theme = "default";
  };
  "perl/core/scripts" = {
    chanact_remove_hash = "yes";
    chanact_sort_by_activity = "yes";
    chanact_display = "$N$H$C$S";
    chanact_abbreviate_names = "0";
    chanact_header = "";
    chanact_filter = "2";
    chanact_chop_status = "yes";
    chanact_separator = " ";
    awl_position = "1";
    awl_placement = "bottom";
    awl_block = "0";
    awl_hide_data = "2";
    awl_display_key = "$N:$H$C$S";
    awl_display_nokey = "$N:$H$C$S";
    awl_columns = "0";
    awl_sbar_maxlength = "no";
    awl_type = "window";
    awl_visible = "inactive";
    awl_maxlines = "5";
  };
  "irc/core" = {
    ctcp_version_reply = "screen+irssi";
    max_wildcard_modes = "10";
  };
};

hilights = (
  { text = "example"; color = "%B"; nick = "yes"; word = "yes"; }
);

servers = (
  {
    chatnet = "example";
    autoconnect = "yes";
    address = "irc.example.org";
    port = "6697";
    use_ssl = "yes";
  }
);

chatnets = {
  example = { type = "IRC"; };
};

channels = (
  { name = "#example"; chatnet = "example"; autojoin = "Yes"; }
);

aliases = {
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  Q = "QUERY";
  WL = "window list";
  WC = "window close";
  WN = "window number";
  G = "window goto";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "2";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        barend = { priority = "100"; alignment = "right"; };
        chanact = { priority = "0"; };
      };
      disabled = "yes";
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topicbarend = { priority = "100"; alignment = "right"; };
        topic = { priority = "0"; };
        topic_empty = { priority = "0"; };
      };
    };
    window = {
      items = {
        barstart = { priority = "100"; };
        time = { };
        window = { };
        window_empty = { };
        user = { priority = "0"; };
        usercount = { priority = "0"; };
        lag = { priority = "0"; };
        more = { priority = "0"; };
        barend = { priority = "100"; alignment = "right"; };
      };
      visible = "active";
    };
    awl_0 = {
      visible = "inactive";
      type = "window";
      position = "1";
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_1 = {
      visible = "inactive";
      type = "window";
      position = "1";
      items = {
        barstart = { priority = "100"; };
        awl_1 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
logs = { };
ignores = ();
windows = {
  1 = { 
    immortal = "yes";
    name = "(status)";
    level = "ALL";
    sticky = "yes";
  };
  999 = { name = "hilight"; sticky = "yes"; };
};
mainwindows = {
  1 = { first_line = "8"; lines = "38"; };
  999 = { first_line = "1"; lines = "7"; };
};
